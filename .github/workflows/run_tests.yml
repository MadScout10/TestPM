name: Autotests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: smoke_tests
        type: choice
        options:
          - smoke_tests
          - regression_tests
          - pb1 smoke_tests
          - pb1 regression_tests
          - test700 smoke_tests
          - test700 regression_tests
          - conftest

permissions:
  contents: read
  pages: write
  id-token: write
  
jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: >
          ARTIFACT_ID=$(curl -L
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/MadScout10/TestPM/actions/artifacts?name=results" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/MadScout10/TestPM/actions/artifacts/$ARTIFACT_ID/zip 
          -o artifacts.zip &&
          REPORT_ID=$(curl -L
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/MadScout10/TestPM/actions/artifacts?name=github-pages" 
          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
          &&
          curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          https://api.github.com/repos/MadScout10/TestPM/actions/artifacts/$REPORT_ID/zip 
          -o pages.zip
      - run: mkdir results && unzip artifacts.zip -d results
      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/history/* results && cp -r pages_history/history results
      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: results
          path:
            results
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: conftest
        if: "github.event.inputs.deployment_target == 'conftest'"
        run: pytest -m new --alluredir=results
        continue-on-error: true
      - name: smoke_tests
        if: "github.event.inputs.deployment_target == 'smoke_tests'"
        run: pytest -m smoke --alluredir=results
        continue-on-error: true
      - name: regression_tests
        if: "github.event.inputs.deployment_target == 'regression_tests'"
        run: pytest -m regression --alluredir=results
        continue-on-error: true
      - name: pb1 smoke_tests
        if: "github.event.inputs.deployment_target == 'pb1 smoke_tests'"
        run: pytest -m smoke --stage https://pm.ru/user/switch_platform/?platform=2 --alluredir=results
        continue-on-error: true
      - name: pb1 regression_tests
        if: "github.event.inputs.deployment_target == 'pb1 regression_tests'"
        run: pytest -m regression --stage https://pm.ru/user/switch_platform/?platform=2 --alluredir=results
        continue-on-error: true
      - name: test700 smoke_tests
        if: "github.event.inputs.deployment_target == 'test700 smoke_tests'"
        run: pytest -m smoke --stage http://m.testpm.ru:700/ --alluredir=results
        continue-on-error: true
      - name: test700 regression_tests
        if: "github.event.inputs.deployment_target == 'test700 regression_tests'"
        run: pytest -m regression --stage http://m.testpm.ru:700/ --alluredir=results
        continue-on-error: true
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: results
          path:
            results
          overwrite: true
          retention-days: 1
        
  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - run: allure generate -c results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path:
            _site
          retention-days: 1
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Send Telegram Notification
        working-directory: ${{ github.workspace }}  # Правильное указание рабочей директории
        run: |
          python send_report.py
          echo "View full report: https://madscout10.github.io/TestPM/#"
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          ALLURE_REPORT_URL: "https://madscout10.github.io/TestPM/#"
          
  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5

