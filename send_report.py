import json
from pathlib import Path
from telegram import Bot
import asyncio
import os

def parse_isolated_results(report_dir="telegram_report"):
    stats = {"passed": 0, "failed": 0, "broken": 0, "skipped": 0, "total": 0}
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ
    for result_file in Path(report_dir).glob("*-result.*"):
        try:
            with open(result_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
                status = data.get("status", "").lower()
                if status in stats:
                    stats[status] += 1
                    stats["total"] += 1
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {result_file}: {str(e)}")
    
    return stats

async def send_telegram_report(token, chat_id, report):
    bot = Bot(token=token)
    message = (
        "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ–≥–æ–Ω–∞ (–±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏)\n"
        f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {report['passed']}\n"
        f"‚ùå –£–ø–∞–≤—à–∏–µ: {report['failed']}\n"
        f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ: {report['broken']}\n"
        f"‚è© –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ: {report['skipped']}\n"
        f"üî¢ –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {report['total']}\n"
        f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {report['success_rate']:.2f}%"
    )
    await bot.send_message(chat_id=chat_id, text=message)

if __name__ == "__main__" and {report['broken']} != 0 and {report['failed']} != 0:
    report = parse_fresh_results()
    asyncio.run(send_telegram_report(
        os.getenv("TELEGRAM_BOT_TOKEN"),
        os.getenv("TELEGRAM_CHAT_ID"),
        report
    ))
    
