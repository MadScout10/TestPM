import json
import os
from pathlib import Path
from telegram import Bot
import asyncio

def parse_fresh_results(results_dir="telegram_temp"):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    stats = {"passed": 0, "failed": 0, "broken": 0, "skipped": 0, "total": 0}
    
    for result_file in Path(results_dir).glob("*-result.*"):
        try:
            with open(result_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
                status = data.get("status", "").lower()
                if status in stats:
                    stats[status] += 1
                    stats["total"] += 1
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {result_file}: {str(e)}")
    
    stats["success_rate"] = (stats["passed"] / stats["total"] * 100) if stats["total"] > 0 else 0
    return stats

def should_send_notification(report):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —É–ø–∞–≤—à–∏–µ –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã
    return report.get("failed", 0) > 0 or report.get("broken", 0) > 0

async def send_telegram_report(token, chat_id, report, report_url=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram"""
    bot = Bot(token=token)
    
    if report["failed"] > 0 and report["broken"] > 0:
        emoji = "üî•"
        status = "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏"
    elif report["failed"] > 0:
        emoji = "‚ùå"
        status = "–£–ø–∞–≤—à–∏–µ —Ç–µ—Å—Ç—ã"
    elif report["broken"] > 0:
        emoji = "‚ö†Ô∏è"
        status = "–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã"
    else:
        emoji = "‚úÖ"
        status = "–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
    
    message = (
        f"{emoji} {status}\n"
        f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {report['passed']}\n"
        f"‚ùå –£–ø–∞–≤—à–∏–µ: {report['failed']}\n"
        f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ: {report['broken']}\n"
        f"‚è© –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ: {report['skipped']}\n"
        f"üî¢ –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {report['total']}\n"
        f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {report['success_rate']:.2f}%"
    )
    
    if report_url:
        message += f"\n\nüìÑ –û—Ç—á–µ—Ç: {report_url}"
    
    await bot.send_message(chat_id=chat_id, text=message)

async def send_success_notification(token, chat_id, report_url=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫—Ä–∞—Ç–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø—Ä–æ–≥–æ–Ω–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"""
    bot = Bot(token=token)
    message = "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!"
    if report_url:
        message += f"\nüìÑ –û—Ç—á–µ—Ç: {report_url}"
    
    # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≥–æ–Ω–∞—Ö
    # await bot.send_message(chat_id=chat_id, text=message)

if __name__ == "__main__":
    print("–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤...")
    report = parse_fresh_results()
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {report}")
    
    if should_send_notification(report):
        print("–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
        asyncio.run(send_telegram_report(
            os.getenv("TELEGRAM_BOT_TOKEN"),
            os.getenv("TELEGRAM_CHAT_ID"),
            report,
            os.getenv("ALLURE_REPORT_URL")
        ))
    else:
        print("–í—Å–µ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω—ã - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è")
        # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É—Å–ø–µ—à–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:
        # asyncio.run(send_success_notification(
        #     os.getenv("TELEGRAM_BOT_TOKEN"),
        #     os.getenv("TELEGRAM_CHAT_ID"),
        #     os.getenv("ALLURE_REPORT_URL")
        # ))
